[
["index.html", "Study 3: Sleep, perceived jet-lag and perceived well-being in elite women cricketers Chapter 1 Introduction", " Study 3: Sleep, perceived jet-lag and perceived well-being in elite women cricketers Benita Lalor et al. | Last updated: 2020-06-04 Chapter 1 Introduction For Study 3, the research questions are: What changes occur in sleep characteristics, perceptions of jetlag, and self-reported well-being: During an international flight (i.e., in-flight sleep), and Over the course of an international T20 tournament following the international flight (i.e., tournament sleep? What is the impact of in-flight sleep on the subsequent tournament sleep, self-reported well-being, and perceptions of jetlag upon arrival at the competition destination?’ What are the relationships between training and match day load, perceptions of wellbeing and jetlag, and objective sleep characteristics during an international tournament? "],
["methods.html", "Chapter 2 Methods 2.1 Participants 2.2 Key definitions 2.3 Measures and variables 2.4 Derived variables and formats 2.5 Analysis", " Chapter 2 Methods 2.1 Participants In total, there were 16 players who participated in this study. However, 2 players recorded habitual sleep only (i.e., no tour sleep data available). In addition, 3 players recorded tour sleep only (i.e., no habitual sleep data available). Thus, 5 participants were excluded from the analysis, where ath_id = c(\"09\", \"13\", \"14\", \"15\", \"16\"). All results reported here include the 11 players who recorded both habitual and on-tour sleep. 2.2 Key definitions In-flight sleep: The sleep obtained during the international travel from Melbourne to Chennai on 8 and 9 March. Distinct sleep bouts: From the actigraphy data, each bout of sleep is treated as a distinct observation. Example: A person has a nap and a night-time sleep occurring on the same date. When the data is represented at the per sleep bout level, the nap and night-time sleep would be captured as two distinct sleep bouts (i.e., one row of sleep data for each bout). Sleep per day: From the actigraphy data, each day of sleep is treated as a distinct observation. Example: A person who has a nap and a night-time sleep occurring on the same date. When the data is represented at the per day level, the nap and night-time sleep data is merged to produce a summary of the day’s sleep (i.e., one row of sleep data for each day). 2.3 Measures and variables Sleep via actigraphy Perceived jet-lag Self-reported well-being Internal load (Session-RPE) 2.4 Derived variables and formats 2.4.1 Habitual sleep Habitual sleep values are obtained from per-person per-day sleep monitoring data, with variables definitions as follows: Bed time: Mean bed time over n number of days monitored, expressed in HH:MM:SS format. Wake-up time: Mean wake-up time over n number of days monitored, expressed in HH:MM:SS format. Sleep duration (min): Mean sleep duration over n number of days monitored, expressed in minutes. Sleep duration (h): Mean sleep duration over n number of days monitored, expressed in decimal hours. Sleep latency: Mean sleep latency over n number of days monitored, expressed in minutes. Sleep efficiency: Mean sleep efficiency over n number of days monitored, expressed as a percentage. Wake duration: Mean wake duration over n number of days monitored, expressed in minutes. Wake bouts num: Mean number of wake bouts over n number of days monitored. Wake bouts average duration: Mean duration of wake bouts over n number of days monitored, expressed in decimal minutes. 2.4.2 Sleep per day The per day data has been calculated from the bout-level data as follows: Sleep duration: Total sleep duration from all sleep bouts that started on the same date, for each person. Sleep latency: Total sleep latency from all sleep bouts that started on the same date, for each person. Sleep efficiency: Efficiency across all sleep bouts that started on the same date, for each person. Click here for more details at back-calculating total time in bed, in order to calculate appropriately weighted values for sleep efficiency at the day-level. Wake duration: Total wake duration from all sleep bouts that started on the same date, for each person. Number of wake bouts: Total number of wake bouts from all sleep bouts that started on the same date, for each person. Average duration of wake bouts: Mean of the average wake bout duration from all sleep bouts that started on the same date, for each person. [JT note] THIS IS AN AVERAGE OF AN AVERAGE. Would be better to calculate this from total wake duration divided by number of wake bouts. 2.4.2.1 Back-calculating total time in bed and sleep efficiency The source data is recorded at the per sleep bout level (i.e., one row = one bout). For most of the sleep variables, it is straightforward to summarise to a per day level: e.g., total sleep duration in a day = the sum of sleep duration across all bouts in a day. For sleep efficiency, this is not as clear cut. At the bout level, sleep efficiency is some percentage of total time in bed (not exceeding 100%). To summarise this at the day-level, we cannot take a total as we would for other sleep variables. For example: a person records two sleep bouts in a day, each with 80% sleep efficiency. If we were to take a total to represent the day-level sleep efficiency, we end up with 80 + 80 = 160%…which doesn’t make sense in the context of this variable! Another approach could be to calculate average (mean) sleep efficiency across a person’s sleep bouts in a day, but this is not accurate either. 2.4.2.1.1 Example 1 A person records two sleep bouts in a day - one brief nap (say, 30 min) and one longer night-time sleep (say, 9 hours). From the nap, the person records 60% sleep efficiency. From the night-time sleep, the person records 90% sleep efficiency. If we average these sleep efficiency figures, then: \\(efficiency_{daymean} = \\frac {efficiency_{nap} + efficiency_{nightsleep}} {n_{bouts}}\\) \\(efficiency_{daymean} = \\frac {(60\\% + 90\\%)} {2}\\) \\(efficiency_{daymean} = {75\\%}\\) However, the problem with this approach is that the efficiency of each bout is given equal weighting in calculating the day’s average. This is despite the fact that the nap is much shorter than the night-time sleep. In this scenario, the mean of sleep efficiency across bouts is likely to underestimate the actual efficiency of sleep obtained across the day. 2.4.2.1.2 Example 2 A person records two sleep bouts in a day - one brief nap (say, 30 min) and one longer night-time sleep (say, 9 hours). From the nap, the person records 90% sleep efficiency. From the night-time sleep, the person records 60% sleep efficiency. If we apply the same averaging approach to this scenario as described for Example 1, the day-level sleep efficiency metric would work out to the same value = 75%. However, in this scenario, this calculation likely overestimates the actual efficiency of sleep obtained across the day, since the person obtained low sleep efficiency from the longest sleep bout in that day. 2.4.2.1.3 Returning to first principles A common way to calculate sleep efficiency is: \\({sleep\\ efficiency} = \\frac {sleep\\ duration} {total\\ time\\ in\\ bed}\\) In the source data, we have sleep efficiency and sleep duration, but not total time in bed. Following first principles, we expect that we can “back-calculate” total time in bed by re-organising the algebraic equation, i.e.: \\({total\\ time\\ in\\ bed} = \\frac {sleep\\ duration} {sleep\\ efficiency}\\) The code below steps through this “back-calculation” procedure, using the habitual sleep data. # Load libraries --------------------------------------------------------------- library(here) library(dplyr) library(knitr) library(kableExtra) # Import the tidy data --------------------------------------------------------- sleep_habitual &lt;- readRDS( here(&quot;outputs/sleep_habitual.rds&quot;)) # Wrangle the data ------------------------------------------------------------- sleep_habitual %&gt;% # Focus on key variables for this explanation select( ath_id, start_date, sleep_duration, sleep_latency, wake_duration, sleep_efficiency) %&gt;% # Back-calculate total time in bed mutate( total_time_in_bed = round( (sleep_duration / sleep_efficiency * 100), 0)) %&gt;% # Reorder columns select( ath_id, start_date, sleep_duration, sleep_efficiency, total_time_in_bed, sleep_latency, wake_duration ) -&gt; back_calc Table 2.1 below shows the results of back-calculating an estimate of total time in bed. # Display table ---------------------------------------------------------------- back_calc %&gt;% kable( caption = &#39;Total time in bed, estimated from habitual sleep variables.&#39;, booktabs = TRUE) %&gt;% kable_styling() %&gt;% scroll_box(width = &quot;800px&quot;, height = &quot;550px&quot;) Table 2.1: Total time in bed, estimated from habitual sleep variables. ath_id start_date sleep_duration sleep_efficiency total_time_in_bed sleep_latency wake_duration 11 2016-10-19 560 68.64 816 1 142 11 2016-10-20 451 79.08 570 0 88 11 2016-10-21 466 64.00 728 8 146 11 2016-10-22 573 65.76 871 22 164 11 2016-10-23 570 70.22 812 7 155 11 2016-10-24 542 80.47 674 10 97 11 2016-10-25 388 81.63 475 0 68 07 2016-10-18 471 76.35 617 10 103 07 2016-10-20 468 83.80 558 0 75 07 2016-10-20 484 89.90 538 0 48 07 2016-10-21 455 81.64 557 4 77 07 2016-10-22 477 82.64 577 0 82 07 2016-10-23 465 82.62 563 0 80 03 2016-10-24 422 78.01 541 0 92 03 2016-10-25 365 77.78 469 0 71 03 2016-10-26 397 77.13 515 9 80 03 2016-10-27 325 79.76 407 10 57 03 2016-10-28 389 76.06 511 4 84 02 2016-10-18 450 84.31 534 8 63 02 2016-10-19 512 79.05 648 6 97 02 2016-10-20 576 88.62 650 0 62 02 2016-10-21 530 88.32 600 0 61 02 2016-10-22 583 80.68 723 0 107 02 2016-10-30 255 96.09 265 0 9 01 2016-10-24 447 94.70 472 5 18 01 2016-10-25 487 93.65 520 0 30 01 2016-10-27 468 95.95 488 0 18 01 2016-10-28 412 90.56 455 0 38 01 2016-10-28 381 97.12 392 0 10 04 2016-11-28 478 90.98 525 9 34 04 2016-11-28 561 87.65 640 5 64 04 2016-11-29 641 89.41 717 0 67 04 2016-11-30 473 93.70 505 0 27 04 2016-12-01 558 84.14 663 40 54 08 2016-10-22 478 85.57 559 13 57 08 2016-10-23 482 76.61 629 13 102 08 2016-10-24 426 79.16 538 0 88 08 2016-10-25 461 80.30 574 0 90 08 2016-10-26 488 81.47 599 2 88 12 2016-11-27 496 77.97 636 87 36 12 2016-11-28 547 86.74 631 2 63 12 2016-11-29 502 93.27 538 2 31 12 2016-11-30 473 93.70 505 0 27 12 2016-12-01 552 88.01 627 14 53 10 2016-10-31 557 92.28 604 25 19 10 2016-11-01 511 88.42 578 1 30 10 2016-11-03 370 97.57 379 0 8 10 2016-11-03 490 92.04 532 18 16 10 2016-11-04 460 89.92 512 25 23 10 2016-11-05 546 93.23 586 14 23 06 2016-10-17 486 87.25 557 11 48 06 2016-10-18 551 89.95 613 2 50 06 2016-10-19 569 88.07 646 0 67 06 2016-10-20 525 86.06 610 4 68 06 2016-10-21 459 85.62 536 6 60 05 2016-10-18 413 89.37 462 0 43 05 2016-10-19 461 88.49 521 1 46 05 2016-10-20 461 82.52 559 6 74 05 2016-10-22 483 84.16 574 40 42 05 2016-10-24 405 90.65 447 2 27 Applying the same approach to bout-level sleep data from the tour period, we can calculate an appropriate day-level metric for sleep efficiency through this process: For each bout, back-calculate total time in bed using the formula above (sleep_duration / sleep_efficiency). Calculate day-level totals for time in bed and sleep duration. Calculate day-level sleep efficiency as: \\(efficiency_{day-level} = \\frac {total\\ time\\ in\\ bed_{day}} {sleep\\ duration_{day}}\\) 2.5 Analysis The content below has been copied over from the GitHub repo for this analysis. 2.5.1 Research question 1 What changes occur in sleep characteristics, perceptions of jetlag, and self-reported well-being over the course of an international T20 tournament and following an international flight? 2.5.1.1 Analysis methods Descriptive statistics Plots 2.5.1.2 Notes Objective sleep data can be presented as absolute values and relative-to-habitual values. 2.5.2 Research question 2 What is the impact of sleep obtained during an international flight on the subsequent sleep, self-reported well-being, and perceptions of jetlag upon arrival at the competition destination? 2.5.2.1 Analysis methods Use the in-flight sleep to group athletes into categories via median split. For example, a low quantity vs. high quantity? Using data only from the n = 8 with habitual + in-flight sleep data, the median is 11.7 h sleep accumulated across the two flights from Melbourne to Chennai. So the ‘low’ group would have recorded &lt;= 11.7 h in-flight sleep and the ‘high’ group would have recorded &gt; 11.7 h (in this example). Then we could scale each athlete’s on-tour sleep data to their habitual sleep data, to calculate how far each night of sleep ‘deviates’ from habitual. This would allow us to use each night of post-flight, on-tour sleep as a data point. With n = 8, this is 91 observations in total; 48 in the ‘high quantity’ group, 43 in the ‘low quantity’ group. To compare these groups, I would use a simple pairwise statistic such as the independent t test (parametric) or the Mann-Whitney test (non-parametric), coupled with an effect size calculation (e.g., standardised mean difference). The number of observations is different for the other measures (well-being, perceptions of jetlag) but the general analytical process would be the same. For RQ2: we want to compare two groups (poor in-flight sleep vs. good in-flight sleep), accounting for repeated measures of the dependent variable (i.e., daily measures). The appropriate test is a non-parametric test for factorial longitudinal data, as described here by Noguchi et al., 2012: https://www.jstatsoft.org/index.php/jss/article/view/v050i12/v50i12.pdf Specifics around data prep and model building: With aggregate in-flight sleep data, apply median split to create groups based on their in-flight sleep quantity (“high” / “low”) and their in-flight sleep quality (“high” / “low”). Convert tournament period data to long format. At minimum, this data set needs these variables: - Response / dependent variable (e.g., sleep duration) - Day of the tournament (this is our time variable) - In-flight sleep quantity group (this is one of our grouping variables) - In-flight sleep quality group (this is one of our grouping variables) Using nparLD package Build omnibus model. Inspect plot and model summary. Conduct pairwise comparisons with Bonferroni adjustment of alpha level. 2.5.2.2 Considerations If we had sufficient sample size, the best approach would be to apply the F2-LD-F1 design as described by Noguchi, et al., 2012. This is analogous to a three-way ANOVA. With such a design, the omnibus model would be specified as: response_variable ~ day * inflight_sleep_quantity_group * inflight_sleep_quality_group And the results of the omnibus model would allow us to check for: Main effects Is there a main effect for “day”? That is, are there changes in the response variable over time (over the tournament period)? Is there a main effect for “in-flight sleep quantity group”? That is, do players differ in the response variable based on whether they are in the “high” vs. “low” group for in-flight sleep quantity? Is there a main effect for “in-flight sleep quality group”? That is, do players differ in the response variable based on whether they are in the “high” vs. “low” group for in-flight sleep quality? Interaction effects Is there an interaction between “day” and “in-flight sleep quantity group”? That is, do the time profiles of the response variable differ between the two groups that are based on in-flight sleep quantity? Is there an interaction between “day” and “in-flight sleep quality group”? That is, do the time profiles of the response variable differ between the two groups that are based on in-flight sleep quality? Is there an interaction between “in-flight sleep quantity” and “in-flight sleep quality”? Think of a quadrant: 1) high-quantity &amp; high-quality in-flight sleep; 2) high-quantity &amp; low-quality in-flight sleep; 3) low-quantity &amp; high-quality in-flight sleep; and 4) low-quantity &amp; low-quality in-flight sleep. Is there an interaction betwen “day”, “in-flight sleep quantity”, and “in-flight sleep quality”? That is, do the time profiles differ of the response variable between groups based on both their in-flight sleep quantity AND quality? The quadrant idea applies here too. While this is the ideal approach, our sample size is too small to be “cut” this many ways. We may need to make mention of this when discussing analysis methods / limitations. 2.5.3 Research question 3 What are the relationships between training and match day load, perceptions of wellbeing and jetlag, and objective sleep characteristics during an international tournament? 2.5.3.1 Analysis methods For n = 13 athletes who recorded some objective sleep data during the tour: Relationship: Internal load on subsequent sleep. Number of paired observations: n(paired obs) = 126 Relationship: Well-being on subsequent sleep. n(paired obs) = 145 Relationship: Perceived jetlag on subsequent sleep. n(paired obs) = 85 Given these numbers, we can address this research question with bivariate correlations (Pearson’s for parametric data, Spearman’s for non-parametric). 2.5.4 Notes For this analysis, are we going to scale to habitual sleep as well? Not sure that we need to here, happy to chat about it though. "],
["habitualsleep.html", "Chapter 3 Habitual sleep 3.1 Per player 3.2 Team summary 3.3 Plots", " Chapter 3 Habitual sleep As explained in 2.1 Participants, the habitual sleep summaries below include only those participants who recorded habitual and on-tour sleep. The variable n_nights indicates the number of habitual sleep nights recorded by each athlete. 3.1 Per player The data displayed in Table 3.1 shows habitual sleep summary data for each player. One row = one player’s habitual sleep measures, expressed as per-day means. Example interpretation: During the habitual sleep period, the average bed time of athlete 01 was 11:41 PM and their average wake-up time was 7:00 AM. Table 3.1: Habitual sleep characteristics per player. ath_id n_nights bed_time wake_up_time sleep_duration_min sleep_duration_h sleep_latency sleep_efficiency wake_duration wake_bouts_num wake_bouts_avg_duration_mean 01 5 23:41:00 07:00:00 439 7.32 1 94.40 23 12 1.88 02 6 00:11:00 12:16:00 484 8.07 2 86.18 66 28 3.46 03 5 22:56:00 05:16:00 380 6.33 5 77.75 77 29 2.63 04 5 23:10:00 08:12:00 542 9.04 11 89.18 49 27 1.76 05 5 23:23:00 06:47:00 445 7.41 10 87.04 46 25 1.88 06 5 22:50:00 07:28:00 518 8.63 5 87.39 59 34 1.72 07 6 23:10:00 07:00:00 470 7.83 2 82.83 78 32 2.47 08 5 22:54:00 06:41:00 467 7.78 6 80.62 85 35 2.42 10 6 22:52:00 07:01:00 489 8.15 14 92.24 20 13 1.51 11 7 22:56:00 07:23:00 507 8.45 7 72.83 123 52 2.35 12 5 23:06:00 07:40:00 514 8.57 21 87.94 42 23 1.76 3.2 Team summary Table 3.2 shows habitual sleep data summarised for the whole team (means and standard deviations). These values are also obtained from day-level sleep monitoring data (i.e., they are not “averages of averages” that would be obtained by taking averages from the per-player data). Example interpretation: Across the team, mean sleep duration during the habitual sleep period was 7.98 h per night (SD = 1.16 h). Table 3.2: Habitual sleep characteristics for the whole team. statistic bed_time wake_up_time sleep_duration_min sleep_duration_h sleep_latency sleep_efficiency wake_duration wake_bouts_num wake_bouts_avg_duration_mean Mean 23:12:00 07:35:00 479 7.98 7 84.98 62 29 2.19 SD 01:11:00 02:21:00 70 1.16 14 7.57 36 13 1.01 3.3 Plots The plots below are visual representations of the data displayed in Tables 3.1 and 3.2 above. "],
["inflightsleep.html", "Chapter 4 In-flight sleep 4.1 Per player 4.2 Team summary", " Chapter 4 In-flight sleep 4.1 Per player 4.1.1 Table: Per sleep bout 4.1.2 Plots: Per day From the plots below, an example interpretation is: When examining sleep obtained during the international travel period, athlete 10 recorded the highest sleep duration per night (mean = 10.19 h), while athlete 01 recorded the lowest sleep duration per night (mean = 4.99 h). Note: The in-flight period covers two days, so individual means and standard deviations should be interpreted in this context. Wide standard deviations are not a cause for concern, but rather a reflection of these statistics being summaries of only 2 observations per person. 4.1.3 Plots: Aggregated over flights NOTE: For these plots, sleep efficiency and average duration of wake bouts data needs to be recalculated from first principles rather than taking an average of an average. From the plots below, an example interpretation is: The total wake duration recorded across all in-flight sleep bouts varied widely between players. Athlete 01 accumulated the lowest wake duration (36 min), while athlete 04 accumulated the highest total wake duration (228 min). 4.2 Team summary 4.2.1 Plots: Daily sleep From the plots below, an example interpretation is: On average, players obtained less than their habitual sleep duration on the first night of in-flight sleep (habitual sleep = 7.97 h; in-flight, 1st night = 5.69 h). On the second night of sleep, they obtained more than their habitual sleep duration (in-flight, 2nd night = 8.95 h) 4.2.2 Tables: Per day across in-flight period Table 4.1 below presents team-level summary statistics for in-flight sleep per day, expressed as absolute values. Example interpretation: Over the course of the international travel days, athletes recorded a mean sleep duration of 7.32 h of per night (SD = 2.90 h). Table 4.1: In-flight sleep summary for the whole team (absolute values). statistic sleep_duration sleep_duration_h total_time_in_bed sleep_latency sleep_efficiency wake_duration wake_bouts_num wake_bouts_avg_duration Mean 439 7.32 511 4 86.65 50 18 2.40 SD 156 2.59 194 5 7.35 42 10 0.96 Table 4.2 below presents team-level summary statistics for in-flight sleep per day, expressed in values that are relative to each person’s habitual sleep characteristics (i.e., relative value = habitual minus in-flight). Example interpretation: Over the course of the international travel days, athletes recorded 39 more minutes of sleep per night (SD = 154 min), as compared to their habitual sleep characteristics. Table 4.2: In-flight sleep summary for the whole team (relative to habitual). statistic sleep_duration_diff sleep_duration_h_diff total_time_in_bed_diff sleep_latency_diff sleep_efficiency_diff wake_duration_diff wake_bouts_num_diff wake_bouts_avg_duration_diff Mean -39 -0.66 -53 -4 1.09 -9 -10 0.26 SD 154 2.57 199 8 9.78 55 17 1.15 4.2.3 Tables: Aggregated across the in-flight period Table 4.3 below presents team-level summary statistics for aggregated in-flight sleep measures, expressed as absolute values. Example interpretation: With sleep bouts aggregated across flights, athletes recorded a mean sleep duration of 14.64 h (SD = 3.56 h). Table 4.3: Aggregated in-flight sleep summary for the whole team (absolute values). statistic sleep_duration sleep_duration_h sleep_latency sleep_efficiency wake_duration wake_bouts_num wake_bouts_avg_duration Mean 878 14.64 8 86.66 100 35 2.40 SD 214 3.56 5 6.60 64 16 0.65 Table 4.4 below presents team-level summary statistics for aggregated in-flight sleep, expressed in values that are relative to each person’s habitual sleep characteristics (i.e., relative value = habitual minus aggregated in-flight measures). Example interpretations: With sleep bouts aggregated across flights, athletes’ in-flight sleep was, on average, 400 minutes longer than their habitual sleep duration (SD = 206 min). With sleep bouts aggregated across flights, athletes’ in-flight sleep efficiency was, on average, 1.1 percentage points higher than their habitual sleep efficiency (SD = 9.61 percentage points). Table 4.4: Aggregated in-flight sleep summary for the whole team (relative to habitual). statistic sleep_duration_diff sleep_duration_h_diff sleep_latency_diff sleep_efficiency_diff wake_duration_diff wake_bouts_num_diff wake_bouts_avg_duration_diff Mean -400 -6.66 0 -1.10 -40 -7 -0.27 SD 206 3.43 8 9.61 76 23 0.93 "],
["tournamentsleep.html", "Chapter 5 Tournament sleep 5.1 Per player 5.2 Team summary", " Chapter 5 Tournament sleep 5.1 Per player 5.1.1 Plots: Per day From the plots below, an example interpretation is: When examining sleep obtained during the tournament, athlete 02 recorded the highest sleep duration per night (mean = 9.06 h), while athlete 10 recorded the lowest sleep duration per night (mean = 7.29 h). 5.2 Team summary 5.2.1 Plots: Daily sleep From the plots below, an example interpretation is: On average, nightly sleep duration during the tournament period was greater than habitual sleep duration (habitual mean = 7.98 h), except for on March 18 (mean = 7.21 h) and March 21 (mean = 6.62 h). 5.2.2 Tables: Per day across tournament period Table 5.1 below presents team-level summary statistics for tournament sleep, expressed as absolute values. Example interpretation: Over the course of the tournament period, athletes recorded a mean sleep duration of 8.33 h of per night (SD = 1.54 h). Table 5.1: Tournament sleep summary for the whole team (absolute values). statistic sleep_duration sleep_duration_h sleep_latency sleep_efficiency wake_duration wake_bouts_num wake_bouts_avg_duration Mean 496 8.26 5 82.92 72 28 2.45 SD 84 1.40 8 7.72 38 12 1.10 Table 5.2 below presents team-level summary statistics for tournament sleep, expressed in values that are relative to each person’s habitual sleep characteristics (i.e., relative value = habitual minus tournament). Example interpretation: Over the course of the tournament period, athletes obtained 21 more minutes of sleep (SD = 106 min), as compared to their habitual sleep characteristics. Table 5.2: Tournament sleep summary for the whole team (relative to habitual). statistic sleep_duration_diff sleep_duration_h_diff sleep_latency_diff sleep_efficiency_diff wake_duration_diff wake_bouts_num_diff wake_bouts_avg_duration_diff Mean 16 0.27 -3 -2.12 11 0 0.28 SD 101 1.68 10 9.13 43 15 1.27 "],
["toursleep.html", "Chapter 6 Whole-tour sleep 6.1 Bout-level data 6.2 Day-level data", " Chapter 6 Whole-tour sleep 6.1 Bout-level data The plots below use data at the level of per player per sleep bout, throughout the whole tour period. 6.1.1 Plot: Bed and wake times of each sleep bout 6.1.2 Plots: Sleep characteristics per bout From the plots below, an example interpretation is: During the international transit period (March 8 and 9), players typically slept in shorter bouts than they did once they entered the tournament period (March 10 onwards). 6.2 Day-level data Some more stuff "],
["indivprofiles.html", "Chapter 7 Individual profiles 7.1 Per sleep bout 7.2 Per day", " Chapter 7 Individual profiles 7.1 Per sleep bout The plots below use data at the level of per player per sleep bout, throughout the whole tour period. 7.1.1 Sleep duration 7.1.2 Sleep latency 7.1.3 Sleep efficiency 7.1.4 Total duration of wake bouts 7.1.5 Number of wake bouts 7.1.6 Average duration of wake bouts 7.2 Per day asdfasdf "],
["jetlag.html", "Chapter 8 Jetlag 8.1 AM rating 8.2 PM rating", " Chapter 8 Jetlag 8.1 AM rating 8.2 PM rating "],
["wellbeing.html", "Chapter 9 Well-being 9.1 Fatigue 9.2 Sleep quality 9.3 Soreness 9.4 Stress 9.5 Overall score", " Chapter 9 Well-being 9.1 Fatigue 9.2 Sleep quality 9.3 Soreness 9.4 Stress 9.5 Overall score "],
["nparLDsleep.html", "Chapter 10 nparLD tutorial - Sleep data 10.1 Set up 10.2 Wrangle the data 10.3 Run the omnibus model 10.4 Run multiple comparison tests", " Chapter 10 nparLD tutorial - Sleep data Walkthrough of a two-factor analysis with the nparLD package, using Study 3 data. 10.1 Set up # Load libraries --------------------------------------------------------------- library(here) library(nparLD) library(dplyr) library(tidyr) library(knitr) library(kableExtra) library(purrr) library(tibble) library(stringr) # Import the data -------------------------------------------------------------- # In-flight sleep data, aggregated across travel dates sleep_inflight_aggregate_indiv &lt;- readRDS( here(&quot;outputs/sleep_inflight_aggregate_indiv.rds&quot;)) # Tournament sleep data per day sleep_per_day_tournament &lt;- readRDS( here(&quot;outputs/sleep_per_day_tournament.rds&quot;)) 10.2 Wrangle the data Using the aggregated in-flight data, we want to apply a median split approach to create two sub-samples based on: Players’ in-flight sleep quantity (i.e., sleep duration) Players’ in-flight sleep quality (i.e., sleep efficiency) # Calculate median for in-flight sleep duration sleep_inflight_aggregate_indiv %&gt;% summarise( sleep_duration_agg_median = median(sleep_duration_agg) ) -&gt; sleep_duration_agg_median # Calculate median for in-flight sleep efficiency sleep_inflight_aggregate_indiv %&gt;% summarise( sleep_efficiency_agg_median = median(sleep_efficiency_agg) ) -&gt; sleep_efficiency_agg_median # Categorise individuals based on median # Group 1 - above / equal to the median # Group 2 - below the median sleep_inflight_aggregate_indiv %&gt;% mutate( sleep_duration_agg_med = as.numeric(sleep_duration_agg_median), sleep_efficiency_agg_med = as.numeric(sleep_efficiency_agg_median), inflight_duration_group = case_when( sleep_duration_agg &gt;= sleep_duration_agg_med ~ &quot;Higher in-flight duration&quot;, TRUE ~ &quot;Lower in-flight duration&quot;), inflight_efficiency_group = case_when( sleep_efficiency_agg &gt;= sleep_efficiency_agg_med ~ &quot;Higher in-flight efficiency&quot;, TRUE ~ &quot;Lower in-flight efficiency&quot;)) %&gt;% select( ath_id, sleep_duration_agg, sleep_duration_agg_med, inflight_duration_group, sleep_efficiency_agg, sleep_efficiency_agg_med, inflight_efficiency_group ) -&gt; median_split_groups After applying the median split approach, the sub-samples look like this: median_split_groups %&gt;% kable() %&gt;% kable_styling() %&gt;% scroll_box(width = &quot;750px&quot;, height = &quot;400px&quot;) ath_id sleep_duration_agg sleep_duration_agg_med inflight_duration_group sleep_efficiency_agg sleep_efficiency_agg_med inflight_efficiency_group 01 599 831 Lower in-flight duration 90.08 88.625 Higher in-flight efficiency 02 761 831 Lower in-flight duration 93.15 88.625 Higher in-flight efficiency 03 667 831 Lower in-flight duration 83.17 88.625 Lower in-flight efficiency 04 918 831 Higher in-flight duration 73.21 88.625 Lower in-flight efficiency 05 1213 831 Higher in-flight duration 82.07 88.625 Lower in-flight efficiency 06 740 831 Lower in-flight duration 90.46 88.625 Higher in-flight efficiency 08 791 831 Lower in-flight duration 81.29 88.625 Lower in-flight efficiency 10 1223 831 Higher in-flight duration 87.17 88.625 Lower in-flight efficiency 11 1002 831 Higher in-flight duration 92.95 88.625 Higher in-flight efficiency 12 871 831 Higher in-flight duration 93.06 88.625 Higher in-flight efficiency To use these groupings in the analysis, we need to merge the info above with data captured during the tournament period. # Simply the median_split_groups data frame to # isolate only the variables to be merged median_split_groups %&gt;% select(ath_id, inflight_duration_group, inflight_efficiency_group ) -&gt; median_split_groups_simple sleep_per_day_tournament %&gt;% # Exclude ath_id == 07; no in-flight sleep data recorded filter(ath_id != &quot;07&quot;) %&gt;% # {nparLD} requires &quot;complete&quot; cases, with # missing values in response variable specified as NA # BUT NO MISSING VALUES in the factors (e.g., day, group) complete( ath_id, nesting(effective_start_date) ) -&gt; tournament_sleep # More info on data structure required for {nparLD} here: # https://community.rstudio.com/t/arguments-imply-differing-number-of-rows/11479 # Merge the group labels in with the tournament sleep data tournament_sleep &lt;- left_join( tournament_sleep, median_split_groups_simple) For the purposes of this tutorial, we are going to simplify the data set further to focus on only those variables needed to complete one factorial analysis. Specifically, we will keep these variables: ath_id effective_start_date sleep_duration_total inflight_duration_group inflight_efficiency_group # Simplify the tournament_sleep data frame to keep # only the variables needed for the factorial analysis tournament_sleep %&gt;% select( ath_id, effective_start_date, sleep_duration_total, inflight_duration_group, inflight_efficiency_group ) -&gt; tournament_sleep_duration The tournament_sleep_duration data set looks like this (first 20 observations shown): tournament_sleep_duration %&gt;% head(n = 20) %&gt;% kable() %&gt;% kable_styling() %&gt;% scroll_box(width = &quot;700px&quot;, height = &quot;400px&quot;) ath_id effective_start_date sleep_duration_total inflight_duration_group inflight_efficiency_group 01 2016-03-10 587 Lower in-flight duration Higher in-flight efficiency 01 2016-03-11 554 Lower in-flight duration Higher in-flight efficiency 01 2016-03-12 NA Lower in-flight duration Higher in-flight efficiency 01 2016-03-13 552 Lower in-flight duration Higher in-flight efficiency 01 2016-03-14 562 Lower in-flight duration Higher in-flight efficiency 01 2016-03-15 NA Lower in-flight duration Higher in-flight efficiency 01 2016-03-16 505 Lower in-flight duration Higher in-flight efficiency 01 2016-03-17 491 Lower in-flight duration Higher in-flight efficiency 01 2016-03-18 NA Lower in-flight duration Higher in-flight efficiency 01 2016-03-19 NA Lower in-flight duration Higher in-flight efficiency 01 2016-03-20 487 Lower in-flight duration Higher in-flight efficiency 01 2016-03-21 400 Lower in-flight duration Higher in-flight efficiency 02 2016-03-10 548 Lower in-flight duration Higher in-flight efficiency 02 2016-03-11 541 Lower in-flight duration Higher in-flight efficiency 02 2016-03-12 504 Lower in-flight duration Higher in-flight efficiency 02 2016-03-13 480 Lower in-flight duration Higher in-flight efficiency 02 2016-03-14 493 Lower in-flight duration Higher in-flight efficiency 02 2016-03-15 547 Lower in-flight duration Higher in-flight efficiency 02 2016-03-16 621 Lower in-flight duration Higher in-flight efficiency 02 2016-03-17 569 Lower in-flight duration Higher in-flight efficiency 10.3 Run the omnibus model 10.3.1 1) Grouped on in-flight sleep quantity This is the code chunk that gives us our “ANOVA-type” statistics for assessing main and interaction effects. # Build the omnibus model invisible( capture.output( omnibus_model &lt;- f1.ld.f1( # Specify the model components y = tournament_sleep_duration$sleep_duration_total, time = tournament_sleep_duration$effective_start_date, group = tournament_sleep_duration$inflight_duration_group, subject = tournament_sleep_duration$ath_id, # Specify names for the time and group factors time.name = &quot;date&quot;, group.name = &quot;group_inflight_duration&quot;, # Change arguments for auto display of certain outputs plot.RTE = FALSE, description = FALSE, order.warning = TRUE) ) ) # Print ANOVA-type output for the omnibus model omnibus_model$ANOVA.test ## Statistic df p-value ## group_inflight_duration 0.01946545 1.000000 0.889040318 ## date 3.78005923 4.252324 0.003641049 ## group_inflight_duration:date 1.29732993 4.252324 0.266826220 The results above can be interpreted as follows: There is no main effect for group_inflight_duration (p = 0.64). That is, the higher and lower in-flight sleep duration groups are not different in terms of the daily sleep duration obtained by players during the tournament period. There is a main effect for date (p &lt; 0.05). That is, there are differences (changes) over time in the daily sleep duration that players obtained during the tournament period. There is no interaction effect for group_inflight_duration x group (p = 0.30). That is, the higher and lower in-flight sleep duration groups are not different in terms of how their daily sleep duration changes over time (i.e., no significant difference in their time profiles). 10.4 Run multiple comparison tests To run multiple comparison (pairwise) tests, we firstly create data subsets that focus on the pair of factor levels we want to compare. The results from the omnibus model indicate a statistically significant main effect for date, so we will compare all paired levels within this factor. There are no statistically significant effects for the group_inflight_duration, nor for the interaction between group_inflight_duration and date. Therefore, there is no need to conduct pairwise tests for these effects. 10.4.1 Main effect for TIME The omnibus model indicates a statistically significant main effect for date. This factor has 12 levels (i.e., 12 distinct dates), spanning each date from 2016-03-10 to 2016-03-21, inclusive. To identify where differences lie within the main effect for date, we need to compare all pairs of, identify exactly where the differences (changes) over time lie. This means we need to create 66 subsets for the following pairwise comparisons: pair_num pairs 1 March 10 vs. 11 2 March 10 vs. 12 3 March 10 vs. 13 4 March 10 vs. 14 5 March 10 vs. 15 6 March 10 vs. 16 7 March 10 vs. 17 8 March 10 vs. 18 9 March 10 vs. 19 10 March 10 vs. 20 11 March 10 vs. 21 12 March 11 vs. 12 13 March 11 vs. 13 14 March 11 vs. 14 15 March 11 vs. 15 16 March 11 vs. 16 17 March 11 vs. 17 18 March 11 vs. 18 19 March 11 vs. 19 20 March 11 vs. 20 21 March 11 vs. 21 22 March 12 vs. 13 23 March 12 vs. 14 24 March 12 vs. 15 25 March 12 vs. 16 26 March 12 vs. 17 27 March 12 vs. 18 28 March 12 vs. 19 29 March 12 vs. 20 30 March 12 vs. 21 31 March 13 vs. 14 32 March 13 vs. 15 33 March 13 vs. 16 34 March 13 vs. 17 35 March 13 vs. 18 36 March 13 vs. 19 37 March 13 vs. 20 38 March 13 vs. 21 39 March 14 vs. 15 40 March 14 vs. 16 41 March 14 vs. 17 42 March 14 vs. 18 43 March 14 vs. 19 44 March 14 vs. 20 45 March 14 vs. 21 46 March 15 vs. 16 47 March 15 vs. 17 48 March 15 vs. 18 49 March 15 vs. 19 50 March 15 vs. 20 51 March 15 vs. 21 52 March 16 vs. 17 53 March 16 vs. 18 54 March 16 vs. 19 55 March 16 vs. 20 56 March 16 vs. 21 57 March 17 vs. 18 58 March 17 vs. 19 59 March 17 vs. 20 60 March 17 vs. 21 61 March 18 vs. 19 62 March 18 vs. 20 63 March 18 vs. 21 64 March 19 vs. 20 65 March 19 vs. 21 66 March 20 vs. 21 Note: For this part of the analysis, the Bonferroni correction is applied to adjust the alpha level for the 66 pairwise tests we would conduct. So an alpha of 0.05 divided by 66 (# of pairwise tests) = significant pairwise differences defined at p &lt; 0.00076. 10.4.1.1 Creating subsets for pairwise comparisons We want to create 66 data subsets for every pair of dates listed above. If we were to create subsets one at a time, we could apply the code chunk below 66 times. data %&gt;% filter( as.character( effective_start_date) %in% c(item1, item2) ) -&gt; data_subset # Example with Study 3 data tournament_sleep_duration %&gt;% filter( as.character( effective_start_date) %in% c(&quot;2016-03-10&quot;, &quot;2016-03-11&quot;) ) -&gt; tournament_sleep_duration_subset_01 Creating such a large number of data subsets is repetitive, very manual, and prone to error. Another way is to “label” the rows that belong to the subsets we want to create. Note: The code chunk below is still quite tedious and manual to write up, but it does make things easier later down the line. I’m sure there’s a better way to produce the code chunk below, but it does what I want it to do :) tournament_sleep_duration %&gt;% mutate( # March 10 pairs subset_march_10_vs_11 = case_when( effective_start_date == &quot;2016-03-10&quot; ~ sleep_duration_total, effective_start_date == &quot;2016-03-11&quot; ~ sleep_duration_total, TRUE ~ NA_real_), subset_march_10_vs_12 = case_when( effective_start_date == &quot;2016-03-10&quot; ~ sleep_duration_total, effective_start_date == &quot;2016-03-12&quot; ~ sleep_duration_total, TRUE ~ NA_real_), subset_march_10_vs_13 = case_when( effective_start_date == &quot;2016-03-10&quot; ~ sleep_duration_total, effective_start_date == &quot;2016-03-13&quot; ~ sleep_duration_total, TRUE ~ NA_real_), subset_march_10_vs_14 = case_when( effective_start_date == &quot;2016-03-10&quot; ~ sleep_duration_total, effective_start_date == &quot;2016-03-14&quot; ~ sleep_duration_total, TRUE ~ NA_real_), subset_march_10_vs_15 = case_when( effective_start_date == &quot;2016-03-10&quot; ~ sleep_duration_total, effective_start_date == &quot;2016-03-15&quot; ~ sleep_duration_total, TRUE ~ NA_real_), subset_march_10_vs_16 = case_when( effective_start_date == &quot;2016-03-10&quot; ~ sleep_duration_total, effective_start_date == &quot;2016-03-16&quot; ~ sleep_duration_total, TRUE ~ NA_real_), subset_march_10_vs_17 = case_when( effective_start_date == &quot;2016-03-10&quot; ~ sleep_duration_total, effective_start_date == &quot;2016-03-17&quot; ~ sleep_duration_total, TRUE ~ NA_real_), subset_march_10_vs_18 = case_when( effective_start_date == &quot;2016-03-10&quot; ~ sleep_duration_total, effective_start_date == &quot;2016-03-18&quot; ~ sleep_duration_total, TRUE ~ NA_real_), subset_march_10_vs_19 = case_when( effective_start_date == &quot;2016-03-10&quot; ~ sleep_duration_total, effective_start_date == &quot;2016-03-19&quot; ~ sleep_duration_total, TRUE ~ NA_real_), subset_march_10_vs_20 = case_when( effective_start_date == &quot;2016-03-10&quot; ~ sleep_duration_total, effective_start_date == &quot;2016-03-20&quot; ~ sleep_duration_total, TRUE ~ NA_real_), subset_march_10_vs_21 = case_when( effective_start_date == &quot;2016-03-10&quot; ~ sleep_duration_total, effective_start_date == &quot;2016-03-21&quot; ~ sleep_duration_total, TRUE ~ NA_real_), # Remaining March 11 pairs subset_march_11_vs_12 = case_when( effective_start_date == &quot;2016-03-11&quot; ~ sleep_duration_total, effective_start_date == &quot;2016-03-12&quot; ~ sleep_duration_total, TRUE ~ NA_real_), subset_march_11_vs_13 = case_when( effective_start_date == &quot;2016-03-11&quot; ~ sleep_duration_total, effective_start_date == &quot;2016-03-13&quot; ~ sleep_duration_total, TRUE ~ NA_real_), subset_march_11_vs_14 = case_when( effective_start_date == &quot;2016-03-11&quot; ~ sleep_duration_total, effective_start_date == &quot;2016-03-14&quot; ~ sleep_duration_total, TRUE ~ NA_real_), subset_march_11_vs_15 = case_when( effective_start_date == &quot;2016-03-11&quot; ~ sleep_duration_total, effective_start_date == &quot;2016-03-15&quot; ~ sleep_duration_total, TRUE ~ NA_real_), subset_march_11_vs_16 = case_when( effective_start_date == &quot;2016-03-11&quot; ~ sleep_duration_total, effective_start_date == &quot;2016-03-16&quot; ~ sleep_duration_total, TRUE ~ NA_real_), subset_march_11_vs_17 = case_when( effective_start_date == &quot;2016-03-11&quot; ~ sleep_duration_total, effective_start_date == &quot;2016-03-17&quot; ~ sleep_duration_total, TRUE ~ NA_real_), subset_march_11_vs_18 = case_when( effective_start_date == &quot;2016-03-11&quot; ~ sleep_duration_total, effective_start_date == &quot;2016-03-18&quot; ~ sleep_duration_total, TRUE ~ NA_real_), subset_march_11_vs_19 = case_when( effective_start_date == &quot;2016-03-11&quot; ~ sleep_duration_total, effective_start_date == &quot;2016-03-19&quot; ~ sleep_duration_total, TRUE ~ NA_real_), subset_march_11_vs_20 = case_when( effective_start_date == &quot;2016-03-11&quot; ~ sleep_duration_total, effective_start_date == &quot;2016-03-20&quot; ~ sleep_duration_total, TRUE ~ NA_real_), subset_march_11_vs_21 = case_when( effective_start_date == &quot;2016-03-11&quot; ~ sleep_duration_total, effective_start_date == &quot;2016-03-21&quot; ~ sleep_duration_total, TRUE ~ NA_real_), # Remaining March 12 pairs subset_march_12_vs_13 = case_when( effective_start_date == &quot;2016-03-12&quot; ~ sleep_duration_total, effective_start_date == &quot;2016-03-13&quot; ~ sleep_duration_total, TRUE ~ NA_real_), subset_march_12_vs_14 = case_when( effective_start_date == &quot;2016-03-12&quot; ~ sleep_duration_total, effective_start_date == &quot;2016-03-14&quot; ~ sleep_duration_total, TRUE ~ NA_real_), subset_march_12_vs_15 = case_when( effective_start_date == &quot;2016-03-12&quot; ~ sleep_duration_total, effective_start_date == &quot;2016-03-15&quot; ~ sleep_duration_total, TRUE ~ NA_real_), subset_march_12_vs_16 = case_when( effective_start_date == &quot;2016-03-12&quot; ~ sleep_duration_total, effective_start_date == &quot;2016-03-16&quot; ~ sleep_duration_total, TRUE ~ NA_real_), subset_march_12_vs_17 = case_when( effective_start_date == &quot;2016-03-12&quot; ~ sleep_duration_total, effective_start_date == &quot;2016-03-17&quot; ~ sleep_duration_total, TRUE ~ NA_real_), subset_march_12_vs_18 = case_when( effective_start_date == &quot;2016-03-12&quot; ~ sleep_duration_total, effective_start_date == &quot;2016-03-18&quot; ~ sleep_duration_total, TRUE ~ NA_real_), subset_march_12_vs_19 = case_when( effective_start_date == &quot;2016-03-12&quot; ~ sleep_duration_total, effective_start_date == &quot;2016-03-19&quot; ~ sleep_duration_total, TRUE ~ NA_real_), subset_march_12_vs_20 = case_when( effective_start_date == &quot;2016-03-12&quot; ~ sleep_duration_total, effective_start_date == &quot;2016-03-20&quot; ~ sleep_duration_total, TRUE ~ NA_real_), subset_march_12_vs_21 = case_when( effective_start_date == &quot;2016-03-12&quot; ~ sleep_duration_total, effective_start_date == &quot;2016-03-21&quot; ~ sleep_duration_total, TRUE ~ NA_real_), # Remaining March 13 pairs subset_march_13_vs_14 = case_when( effective_start_date == &quot;2016-03-13&quot; ~ sleep_duration_total, effective_start_date == &quot;2016-03-14&quot; ~ sleep_duration_total, TRUE ~ NA_real_), subset_march_13_vs_15 = case_when( effective_start_date == &quot;2016-03-13&quot; ~ sleep_duration_total, effective_start_date == &quot;2016-03-15&quot; ~ sleep_duration_total, TRUE ~ NA_real_), subset_march_13_vs_16 = case_when( effective_start_date == &quot;2016-03-13&quot; ~ sleep_duration_total, effective_start_date == &quot;2016-03-16&quot; ~ sleep_duration_total, TRUE ~ NA_real_), subset_march_13_vs_17 = case_when( effective_start_date == &quot;2016-03-13&quot; ~ sleep_duration_total, effective_start_date == &quot;2016-03-17&quot; ~ sleep_duration_total, TRUE ~ NA_real_), subset_march_13_vs_18 = case_when( effective_start_date == &quot;2016-03-13&quot; ~ sleep_duration_total, effective_start_date == &quot;2016-03-18&quot; ~ sleep_duration_total, TRUE ~ NA_real_), subset_march_13_vs_19 = case_when( effective_start_date == &quot;2016-03-13&quot; ~ sleep_duration_total, effective_start_date == &quot;2016-03-19&quot; ~ sleep_duration_total, TRUE ~ NA_real_), subset_march_13_vs_20 = case_when( effective_start_date == &quot;2016-03-13&quot; ~ sleep_duration_total, effective_start_date == &quot;2016-03-20&quot; ~ sleep_duration_total, TRUE ~ NA_real_), subset_march_13_vs_21 = case_when( effective_start_date == &quot;2016-03-13&quot; ~ sleep_duration_total, effective_start_date == &quot;2016-03-21&quot; ~ sleep_duration_total, TRUE ~ NA_real_), # Remaining March 14 pairs subset_march_14_vs_15 = case_when( effective_start_date == &quot;2016-03-14&quot; ~ sleep_duration_total, effective_start_date == &quot;2016-03-15&quot; ~ sleep_duration_total, TRUE ~ NA_real_), subset_march_14_vs_16 = case_when( effective_start_date == &quot;2016-03-14&quot; ~ sleep_duration_total, effective_start_date == &quot;2016-03-16&quot; ~ sleep_duration_total, TRUE ~ NA_real_), subset_march_14_vs_17 = case_when( effective_start_date == &quot;2016-03-14&quot; ~ sleep_duration_total, effective_start_date == &quot;2016-03-17&quot; ~ sleep_duration_total, TRUE ~ NA_real_), subset_march_14_vs_18 = case_when( effective_start_date == &quot;2016-03-14&quot; ~ sleep_duration_total, effective_start_date == &quot;2016-03-18&quot; ~ sleep_duration_total, TRUE ~ NA_real_), subset_march_14_vs_19 = case_when( effective_start_date == &quot;2016-03-14&quot; ~ sleep_duration_total, effective_start_date == &quot;2016-03-19&quot; ~ sleep_duration_total, TRUE ~ NA_real_), subset_march_14_vs_20 = case_when( effective_start_date == &quot;2016-03-14&quot; ~ sleep_duration_total, effective_start_date == &quot;2016-03-20&quot; ~ sleep_duration_total, TRUE ~ NA_real_), subset_march_14_vs_21 = case_when( effective_start_date == &quot;2016-03-14&quot; ~ sleep_duration_total, effective_start_date == &quot;2016-03-21&quot; ~ sleep_duration_total, TRUE ~ NA_real_), # Remaining March 15 pairs subset_march_15_vs_16 = case_when( effective_start_date == &quot;2016-03-15&quot; ~ sleep_duration_total, effective_start_date == &quot;2016-03-16&quot; ~ sleep_duration_total, TRUE ~ NA_real_), subset_march_15_vs_17 = case_when( effective_start_date == &quot;2016-03-15&quot; ~ sleep_duration_total, effective_start_date == &quot;2016-03-17&quot; ~ sleep_duration_total, TRUE ~ NA_real_), subset_march_15_vs_18 = case_when( effective_start_date == &quot;2016-03-15&quot; ~ sleep_duration_total, effective_start_date == &quot;2016-03-18&quot; ~ sleep_duration_total, TRUE ~ NA_real_), subset_march_15_vs_19 = case_when( effective_start_date == &quot;2016-03-15&quot; ~ sleep_duration_total, effective_start_date == &quot;2016-03-19&quot; ~ sleep_duration_total, TRUE ~ NA_real_), subset_march_15_vs_20 = case_when( effective_start_date == &quot;2016-03-15&quot; ~ sleep_duration_total, effective_start_date == &quot;2016-03-20&quot; ~ sleep_duration_total, TRUE ~ NA_real_), subset_march_15_vs_21 = case_when( effective_start_date == &quot;2016-03-15&quot; ~ sleep_duration_total, effective_start_date == &quot;2016-03-21&quot; ~ sleep_duration_total, TRUE ~ NA_real_), # Remaining March 16 pairs subset_march_16_vs_17 = case_when( effective_start_date == &quot;2016-03-16&quot; ~ sleep_duration_total, effective_start_date == &quot;2016-03-17&quot; ~ sleep_duration_total, TRUE ~ NA_real_), subset_march_16_vs_18 = case_when( effective_start_date == &quot;2016-03-16&quot; ~ sleep_duration_total, effective_start_date == &quot;2016-03-18&quot; ~ sleep_duration_total, TRUE ~ NA_real_), subset_march_16_vs_19 = case_when( effective_start_date == &quot;2016-03-16&quot; ~ sleep_duration_total, effective_start_date == &quot;2016-03-19&quot; ~ sleep_duration_total, TRUE ~ NA_real_), subset_march_16_vs_20 = case_when( effective_start_date == &quot;2016-03-16&quot; ~ sleep_duration_total, effective_start_date == &quot;2016-03-20&quot; ~ sleep_duration_total, TRUE ~ NA_real_), subset_march_16_vs_21 = case_when( effective_start_date == &quot;2016-03-16&quot; ~ sleep_duration_total, effective_start_date == &quot;2016-03-21&quot; ~ sleep_duration_total, TRUE ~ NA_real_), # Remaining March 17 pairs subset_march_17_vs_18 = case_when( effective_start_date == &quot;2016-03-17&quot; ~ sleep_duration_total, effective_start_date == &quot;2016-03-18&quot; ~ sleep_duration_total, TRUE ~ NA_real_), subset_march_17_vs_19 = case_when( effective_start_date == &quot;2016-03-17&quot; ~ sleep_duration_total, effective_start_date == &quot;2016-03-19&quot; ~ sleep_duration_total, TRUE ~ NA_real_), subset_march_17_vs_20 = case_when( effective_start_date == &quot;2016-03-17&quot; ~ sleep_duration_total, effective_start_date == &quot;2016-03-20&quot; ~ sleep_duration_total, TRUE ~ NA_real_), subset_march_17_vs_21 = case_when( effective_start_date == &quot;2016-03-17&quot; ~ sleep_duration_total, effective_start_date == &quot;2016-03-21&quot; ~ sleep_duration_total, TRUE ~ NA_real_), # Remaining March 18 pairs subset_march_18_vs_19 = case_when( effective_start_date == &quot;2016-03-18&quot; ~ sleep_duration_total, effective_start_date == &quot;2016-03-19&quot; ~ sleep_duration_total, TRUE ~ NA_real_), subset_march_18_vs_20 = case_when( effective_start_date == &quot;2016-03-18&quot; ~ sleep_duration_total, effective_start_date == &quot;2016-03-20&quot; ~ sleep_duration_total, TRUE ~ NA_real_), subset_march_18_vs_21 = case_when( effective_start_date == &quot;2016-03-18&quot; ~ sleep_duration_total, effective_start_date == &quot;2016-03-21&quot; ~ sleep_duration_total, TRUE ~ NA_real_), # Remaining March 19 pairs subset_march_19_vs_20 = case_when( effective_start_date == &quot;2016-03-19&quot; ~ sleep_duration_total, effective_start_date == &quot;2016-03-20&quot; ~ sleep_duration_total, TRUE ~ NA_real_), subset_march_19_vs_21 = case_when( effective_start_date == &quot;2016-03-19&quot; ~ sleep_duration_total, effective_start_date == &quot;2016-03-21&quot; ~ sleep_duration_total, TRUE ~ NA_real_), # Remaining March 20 pairs subset_march_20_vs_21 = case_when( effective_start_date == &quot;2016-03-20&quot; ~ sleep_duration_total, effective_start_date == &quot;2016-03-21&quot; ~ sleep_duration_total, TRUE ~ NA_real_)) %&gt;% select( -sleep_duration_total, -starts_with(&quot;inflight&quot;) ) -&gt; tournament_sleep_duration_wide # Convert from wide to long format tournament_sleep_duration_wide %&gt;% gather( key = &quot;subset_id&quot;, value = &quot;sleep_duration_total&quot;, -c(&quot;ath_id&quot;, &quot;effective_start_date&quot;), na.rm = TRUE, factor_key = TRUE) %&gt;% group_by(subset_id) %&gt;% complete( ath_id, nesting(effective_start_date)) %&gt;% ungroup( ) -&gt; tournament_sleep_duration_subsets # Need to merge the median split grouping vars back in tournament_sleep_duration_subsets &lt;- left_join( tournament_sleep_duration_subsets, median_split_groups_simple) ## Joining, by = &quot;ath_id&quot; Executing the code chunk above labels all subsets while keeping them in the same data frame. This allows us to run one omnibus model for each subset in a looping (iterative) fashion. Iteratively modelling the 66 subsets creates 66 models, or in reality 66 pairwise tests. invisible( capture.output( pairwise_tests_time_models &lt;- tournament_sleep_duration_subsets %&gt;% split(.$subset_id) %&gt;% map( ~f1.ld.f1( # Specify the model components y = .$sleep_duration_total, time = .$effective_start_date, group = .$inflight_duration_group, subject = .$ath_id, # Specify names for the time and group factors time.name = &quot;date&quot;, group.name = &quot;group_inflight_duration&quot;, # Change arguments for auto display of certain outputs plot.RTE = FALSE, description = FALSE, order.warning = FALSE) ) ) ) The pairwise_tests_time_models object stores the model outputs for all 66 models (in this case, pairwise tests) we have run to compare sleep duration between every pair of dates. We want to focus our attention on the pairwise test results. # Extract ANOVA.test element and tidy up the resulting data frame pairwise_tests_time_models %&gt;% lapply(&quot;[&quot;, &quot;ANOVA.test&quot;) %&gt;% as.data.frame() %&gt;% rownames_to_column(&quot;test_effect&quot;) %&gt;% filter(test_effect == &quot;date&quot;) %&gt;% gather( key = &quot;test_statistic&quot;, value = &quot;result&quot;, -test_effect) %&gt;% separate( col = test_statistic, into = c(&quot;subset_id&quot;, &quot;stat_type&quot;), sep = &quot;[.]&quot;, extra = &quot;merge&quot;) %&gt;% rename( test_statistic = stat_type) %&gt;% mutate( test_statistic = case_when( str_detect(test_statistic, &quot;Statistic&quot;) ~ &quot;ANOVA-type statistic&quot;, str_detect(test_statistic, &quot;df&quot;) ~ &quot;df&quot;, str_detect(test_statistic, &quot;p&quot;) ~ &quot;p&quot;)) %&gt;% filter( test_statistic == &quot;p&quot;) %&gt;% mutate( result = round(result, 6), p_adjusted = round(0.05 / 66, 6), pairwise_diff = case_when( result &lt; p_adjusted ~ &quot;Yes&quot;, TRUE ~ &quot;No&quot;) ) -&gt; pairwise_tests_time_results There is one instance (for subset_march_11_vs_14) where the p value is NA - this is due to tied mean ranks when comparing between dates. pairwise_tests_time_results %&gt;% arrange(desc(pairwise_diff)) %&gt;% kable() %&gt;% kable_styling() %&gt;% scroll_box(width = &quot;750px&quot;, height = &quot;350px&quot;) test_effect subset_id test_statistic result p_adjusted pairwise_diff date subset_march_10_vs_18 p 0.000000 0.000758 Yes date subset_march_10_vs_21 p 0.000286 0.000758 Yes date subset_march_11_vs_18 p 0.000479 0.000758 Yes date subset_march_12_vs_18 p 0.000755 0.000758 Yes date subset_march_12_vs_21 p 0.000702 0.000758 Yes date subset_march_13_vs_18 p 0.000459 0.000758 Yes date subset_march_15_vs_18 p 0.000038 0.000758 Yes date subset_march_16_vs_18 p 0.000000 0.000758 Yes date subset_march_16_vs_21 p 0.000031 0.000758 Yes date subset_march_17_vs_18 p 0.000000 0.000758 Yes date subset_march_17_vs_21 p 0.000000 0.000758 Yes date subset_march_10_vs_11 p 0.113013 0.000758 No date subset_march_10_vs_12 p 0.357643 0.000758 No date subset_march_10_vs_13 p 0.640302 0.000758 No date subset_march_10_vs_14 p 0.234075 0.000758 No date subset_march_10_vs_15 p 0.644076 0.000758 No date subset_march_10_vs_16 p 0.735317 0.000758 No date subset_march_10_vs_17 p 0.525521 0.000758 No date subset_march_10_vs_19 p 0.621954 0.000758 No date subset_march_10_vs_20 p 0.942575 0.000758 No date subset_march_11_vs_12 p 0.787774 0.000758 No date subset_march_11_vs_13 p 0.469763 0.000758 No date subset_march_11_vs_14 p NA 0.000758 No date subset_march_11_vs_15 p 0.147293 0.000758 No date subset_march_11_vs_16 p 0.120385 0.000758 No date subset_march_11_vs_17 p 0.004124 0.000758 No date subset_march_11_vs_19 p 0.230043 0.000758 No date subset_march_11_vs_20 p 0.414944 0.000758 No date subset_march_11_vs_21 p 0.004290 0.000758 No date subset_march_12_vs_13 p 0.816707 0.000758 No date subset_march_12_vs_14 p 0.507127 0.000758 No date subset_march_12_vs_15 p 0.317400 0.000758 No date subset_march_12_vs_16 p 0.087546 0.000758 No date subset_march_12_vs_17 p 0.039147 0.000758 No date subset_march_12_vs_19 p 0.100714 0.000758 No date subset_march_12_vs_20 p 0.826860 0.000758 No date subset_march_13_vs_14 p 0.730647 0.000758 No date subset_march_13_vs_15 p 0.641540 0.000758 No date subset_march_13_vs_16 p 0.665106 0.000758 No date subset_march_13_vs_17 p 0.404347 0.000758 No date subset_march_13_vs_19 p 0.464261 0.000758 No date subset_march_13_vs_20 p 0.890001 0.000758 No date subset_march_13_vs_21 p 0.028625 0.000758 No date subset_march_14_vs_15 p 0.241962 0.000758 No date subset_march_14_vs_16 p 0.260858 0.000758 No date subset_march_14_vs_17 p 0.170794 0.000758 No date subset_march_14_vs_18 p 0.005429 0.000758 No date subset_march_14_vs_19 p 0.216146 0.000758 No date subset_march_14_vs_20 p 0.606341 0.000758 No date subset_march_14_vs_21 p 0.016450 0.000758 No date subset_march_15_vs_16 p 0.876363 0.000758 No date subset_march_15_vs_17 p 0.868179 0.000758 No date subset_march_15_vs_19 p 0.907405 0.000758 No date subset_march_15_vs_20 p 0.826153 0.000758 No date subset_march_15_vs_21 p 0.002311 0.000758 No date subset_march_16_vs_17 p 0.766649 0.000758 No date subset_march_16_vs_19 p 0.655975 0.000758 No date subset_march_16_vs_20 p 0.756853 0.000758 No date subset_march_17_vs_19 p 0.966088 0.000758 No date subset_march_17_vs_20 p 0.495857 0.000758 No date subset_march_18_vs_19 p 0.000962 0.000758 No date subset_march_18_vs_20 p 0.001913 0.000758 No date subset_march_18_vs_21 p 0.906724 0.000758 No date subset_march_19_vs_20 p 0.600208 0.000758 No date subset_march_19_vs_21 p 0.004111 0.000758 No date subset_march_20_vs_21 p 0.006386 0.000758 No "],
["inflightsleepandtournamentsleep.html", "Chapter 11 Impact of flight on tournament sleep 11.1 Omnibus models: Based on in-flight duration group 11.2 Omnibus models: Based on in-flight efficiency group", " Chapter 11 Impact of flight on tournament sleep TO DO: Conduct assumption tests. Given that the assumption testing for RQ3 (correlation analysis) showed that “many variables across the load, sleep, jetlag, and well-being measures do not approximate normal”, we proceed for now on the basis that assumption testing for RQ2 will show similar results. 11.1 Omnibus models: Based on in-flight duration group Table 11.1: Omnibus model results: Tournament sleep &amp; in-flight duration group. Test effect Statistic df p Sig. difference? Sleep duration Main effect: In-flight duration group 0.0195 1.0000 0.8890 No Main effect: Date 3.7801 4.2523 0.0036 Yes Interaction: Group x Date 1.2973 4.2523 0.2668 No Sleep efficiency Main effect: In-flight duration group 0.8577 1.0000 0.3544 No Main effect: Date 1.3428 4.0555 0.2508 No Interaction: Group x Date 1.0400 4.0555 0.3853 No Sleep latency Main effect: In-flight duration group 0.0946 1.0000 0.7584 No Main effect: Date 0.8769 4.2523 0.4819 No Interaction: Group x Date 0.6119 4.2523 0.6641 No Average duration of wake bouts Main effect: In-flight duration group 2.2110 1.0000 0.1370 No Main effect: Date 1.0944 3.9724 0.3572 No Interaction: Group x Date 1.6645 3.9724 0.1556 No Number of wake bouts Main effect: In-flight duration group 0.1377 1.0000 0.7106 No Main effect: Date 2.9938 4.3257 0.0148 Yes Interaction: Group x Date 1.0772 4.3257 0.3677 No Total wake duration Main effect: In-flight duration group 1.2368 1.0000 0.2661 No Main effect: Date 2.5267 3.8604 0.0407 Yes Interaction: Group x Date 1.0050 3.8604 0.4017 No 11.1.1 Pairwise tests for sleep duration 11.1.1.1 Main effect of date Table 11.2: Pairwise comparisons: Main effect of date on sleep duration. Tested pair p p_bonferroni Pairwise difference? subset_march_10_vs_18 0.00000 0.00076 Yes subset_march_10_vs_21 0.00029 0.00076 Yes subset_march_11_vs_18 0.00048 0.00076 Yes subset_march_12_vs_18 0.00075 0.00076 Yes subset_march_12_vs_21 0.00070 0.00076 Yes subset_march_13_vs_18 0.00046 0.00076 Yes subset_march_15_vs_18 0.00004 0.00076 Yes subset_march_16_vs_18 0.00000 0.00076 Yes subset_march_16_vs_21 0.00003 0.00076 Yes subset_march_17_vs_18 0.00000 0.00076 Yes subset_march_17_vs_21 0.00000 0.00076 Yes subset_march_10_vs_11 0.11301 0.00076 No subset_march_10_vs_12 0.35764 0.00076 No subset_march_10_vs_13 0.64030 0.00076 No subset_march_10_vs_14 0.23407 0.00076 No subset_march_10_vs_15 0.64408 0.00076 No subset_march_10_vs_16 0.73532 0.00076 No subset_march_10_vs_17 0.52552 0.00076 No subset_march_10_vs_19 0.62195 0.00076 No subset_march_10_vs_20 0.94257 0.00076 No subset_march_11_vs_12 0.78777 0.00076 No subset_march_11_vs_13 0.46976 0.00076 No subset_march_11_vs_14 NA 0.00076 No subset_march_11_vs_15 0.14729 0.00076 No subset_march_11_vs_16 0.12038 0.00076 No subset_march_11_vs_17 0.00412 0.00076 No subset_march_11_vs_19 0.23004 0.00076 No subset_march_11_vs_20 0.41494 0.00076 No subset_march_11_vs_21 0.00429 0.00076 No subset_march_12_vs_13 0.81671 0.00076 No subset_march_12_vs_14 0.50713 0.00076 No subset_march_12_vs_15 0.31740 0.00076 No subset_march_12_vs_16 0.08755 0.00076 No subset_march_12_vs_17 0.03915 0.00076 No subset_march_12_vs_19 0.10071 0.00076 No subset_march_12_vs_20 0.82686 0.00076 No subset_march_13_vs_14 0.73065 0.00076 No subset_march_13_vs_15 0.64154 0.00076 No subset_march_13_vs_16 0.66511 0.00076 No subset_march_13_vs_17 0.40435 0.00076 No subset_march_13_vs_19 0.46426 0.00076 No subset_march_13_vs_20 0.89000 0.00076 No subset_march_13_vs_21 0.02862 0.00076 No subset_march_14_vs_15 0.24196 0.00076 No subset_march_14_vs_16 0.26086 0.00076 No subset_march_14_vs_17 0.17079 0.00076 No subset_march_14_vs_18 0.00543 0.00076 No subset_march_14_vs_19 0.21615 0.00076 No subset_march_14_vs_20 0.60634 0.00076 No subset_march_14_vs_21 0.01645 0.00076 No subset_march_15_vs_16 0.87636 0.00076 No subset_march_15_vs_17 0.86818 0.00076 No subset_march_15_vs_19 0.90741 0.00076 No subset_march_15_vs_20 0.82615 0.00076 No subset_march_15_vs_21 0.00231 0.00076 No subset_march_16_vs_17 0.76665 0.00076 No subset_march_16_vs_19 0.65597 0.00076 No subset_march_16_vs_20 0.75685 0.00076 No subset_march_17_vs_19 0.96609 0.00076 No subset_march_17_vs_20 0.49586 0.00076 No subset_march_18_vs_19 0.00096 0.00076 No subset_march_18_vs_20 0.00191 0.00076 No subset_march_18_vs_21 0.90672 0.00076 No subset_march_19_vs_20 0.60021 0.00076 No subset_march_19_vs_21 0.00411 0.00076 No subset_march_20_vs_21 0.00639 0.00076 No 11.1.1.2 Summary stats: Sleep duration by date Table 11.3: Summary stats: Sleep duration by date of tournament period. date median IQR 2016-03-10 8.65 0.90 2016-03-11 8.43 1.53 2016-03-12 8.70 0.38 2016-03-13 8.63 1.10 2016-03-14 8.33 0.45 2016-03-15 8.83 0.85 2016-03-16 8.80 0.65 2016-03-17 8.80 0.95 2016-03-18 6.73 1.43 2016-03-19 8.97 0.80 2016-03-20 8.60 1.23 2016-03-21 6.57 1.92 11.1.2 Pairwise tests for number of wake bouts 11.1.2.1 Main effect of date Table 11.4: Pairwise comparisons: Main effect of date on number of wake bouts. Tested pair p p_bonferroni Pairwise difference? subset_march_10_vs_11 0.46211 0.00076 No subset_march_10_vs_12 0.13266 0.00076 No subset_march_10_vs_13 0.11945 0.00076 No subset_march_10_vs_14 0.31084 0.00076 No subset_march_10_vs_15 0.11601 0.00076 No subset_march_10_vs_16 0.76440 0.00076 No subset_march_10_vs_17 0.67310 0.00076 No subset_march_10_vs_18 0.09920 0.00076 No subset_march_10_vs_19 0.30794 0.00076 No subset_march_10_vs_20 0.04005 0.00076 No subset_march_10_vs_21 0.08613 0.00076 No subset_march_11_vs_12 0.14844 0.00076 No subset_march_11_vs_13 0.20930 0.00076 No subset_march_11_vs_14 0.30866 0.00076 No subset_march_11_vs_15 0.23514 0.00076 No subset_march_11_vs_16 0.51323 0.00076 No subset_march_11_vs_17 NA 0.00076 No subset_march_11_vs_18 0.23457 0.00076 No subset_march_11_vs_19 0.30608 0.00076 No subset_march_11_vs_20 0.21871 0.00076 No subset_march_11_vs_21 0.16641 0.00076 No subset_march_12_vs_13 0.85837 0.00076 No subset_march_12_vs_14 0.72831 0.00076 No subset_march_12_vs_15 0.56509 0.00076 No subset_march_12_vs_16 0.27506 0.00076 No subset_march_12_vs_17 0.09271 0.00076 No subset_march_12_vs_18 0.01717 0.00076 No subset_march_12_vs_19 0.02984 0.00076 No subset_march_12_vs_20 0.07627 0.00076 No subset_march_12_vs_21 0.00326 0.00076 No subset_march_13_vs_14 0.72760 0.00076 No subset_march_13_vs_15 0.76591 0.00076 No subset_march_13_vs_16 0.41488 0.00076 No subset_march_13_vs_17 0.12507 0.00076 No subset_march_13_vs_18 0.00599 0.00076 No subset_march_13_vs_19 0.66051 0.00076 No subset_march_13_vs_20 0.00977 0.00076 No subset_march_13_vs_21 0.00364 0.00076 No subset_march_14_vs_15 0.69880 0.00076 No subset_march_14_vs_16 0.65694 0.00076 No subset_march_14_vs_17 0.21702 0.00076 No subset_march_14_vs_18 0.03013 0.00076 No subset_march_14_vs_19 0.79246 0.00076 No subset_march_14_vs_20 0.01259 0.00076 No subset_march_14_vs_21 0.01983 0.00076 No subset_march_15_vs_16 0.33657 0.00076 No subset_march_15_vs_17 0.07174 0.00076 No subset_march_15_vs_18 0.00507 0.00076 No subset_march_15_vs_19 0.21772 0.00076 No subset_march_15_vs_20 0.01653 0.00076 No subset_march_15_vs_21 0.00200 0.00076 No subset_march_16_vs_17 0.68792 0.00076 No subset_march_16_vs_18 0.00804 0.00076 No subset_march_16_vs_19 0.55387 0.00076 No subset_march_16_vs_20 0.05323 0.00076 No subset_march_16_vs_21 0.01798 0.00076 No subset_march_17_vs_18 0.19259 0.00076 No subset_march_17_vs_19 0.18638 0.00076 No subset_march_17_vs_20 0.18590 0.00076 No subset_march_17_vs_21 0.16403 0.00076 No subset_march_18_vs_19 0.00929 0.00076 No subset_march_18_vs_20 0.64055 0.00076 No subset_march_18_vs_21 0.42537 0.00076 No subset_march_19_vs_20 0.08452 0.00076 No subset_march_19_vs_21 0.00219 0.00076 No subset_march_20_vs_21 NA 0.00076 No Note: Because the pairwise comparisons are interpreted against a stricter threshold for statistical significance (due to the Bonferroni adjustment), the table above shows that there are no statistically significant differences between date-pairs, despite the fact that the omnibus model indicates a significant main effect for date. This indicates that the main effect for date is negligible. 11.1.3 Pairwise tests for total wake duration 11.1.3.1 Main effect of date Table 11.5: Pairwise comparisons: Main effect of date on wake. Tested pair p p_bonferroni Pairwise difference? subset_march_15_vs_18 0.00004 0.00076 Yes subset_march_15_vs_19 0.00006 0.00076 Yes subset_march_10_vs_11 0.38413 0.00076 No subset_march_10_vs_12 0.93353 0.00076 No subset_march_10_vs_13 0.27010 0.00076 No subset_march_10_vs_14 0.44849 0.00076 No subset_march_10_vs_15 0.01682 0.00076 No subset_march_10_vs_16 0.18622 0.00076 No subset_march_10_vs_17 0.34955 0.00076 No subset_march_10_vs_18 0.00445 0.00076 No subset_march_10_vs_19 0.21102 0.00076 No subset_march_10_vs_20 0.00836 0.00076 No subset_march_10_vs_21 0.02719 0.00076 No subset_march_11_vs_12 0.34754 0.00076 No subset_march_11_vs_13 0.22122 0.00076 No subset_march_11_vs_14 0.57812 0.00076 No subset_march_11_vs_15 0.18215 0.00076 No subset_march_11_vs_16 0.50842 0.00076 No subset_march_11_vs_17 0.75693 0.00076 No subset_march_11_vs_18 0.55789 0.00076 No subset_march_11_vs_19 0.77493 0.00076 No subset_march_11_vs_20 0.21510 0.00076 No subset_march_11_vs_21 0.42119 0.00076 No subset_march_12_vs_13 0.20384 0.00076 No subset_march_12_vs_14 0.94457 0.00076 No subset_march_12_vs_15 0.14103 0.00076 No subset_march_12_vs_16 0.19049 0.00076 No subset_march_12_vs_17 0.31303 0.00076 No subset_march_12_vs_18 0.00210 0.00076 No subset_march_12_vs_19 0.33561 0.00076 No subset_march_12_vs_20 0.01980 0.00076 No subset_march_12_vs_21 0.02375 0.00076 No subset_march_13_vs_14 0.16424 0.00076 No subset_march_13_vs_15 0.27910 0.00076 No subset_march_13_vs_16 0.19197 0.00076 No subset_march_13_vs_17 0.13822 0.00076 No subset_march_13_vs_18 0.00653 0.00076 No subset_march_13_vs_19 0.02916 0.00076 No subset_march_13_vs_20 0.00560 0.00076 No subset_march_13_vs_21 0.03058 0.00076 No subset_march_14_vs_15 0.00793 0.00076 No subset_march_14_vs_16 0.56280 0.00076 No subset_march_14_vs_17 0.30710 0.00076 No subset_march_14_vs_18 0.01544 0.00076 No subset_march_14_vs_19 0.15267 0.00076 No subset_march_14_vs_20 0.01084 0.00076 No subset_march_14_vs_21 0.08851 0.00076 No subset_march_15_vs_16 0.03654 0.00076 No subset_march_15_vs_17 0.02023 0.00076 No subset_march_15_vs_20 0.00474 0.00076 No subset_march_15_vs_21 0.00901 0.00076 No subset_march_16_vs_17 0.93479 0.00076 No subset_march_16_vs_18 0.07034 0.00076 No subset_march_16_vs_19 0.86579 0.00076 No subset_march_16_vs_20 0.10996 0.00076 No subset_march_16_vs_21 0.18502 0.00076 No subset_march_17_vs_18 0.46335 0.00076 No subset_march_17_vs_19 0.57394 0.00076 No subset_march_17_vs_20 0.23735 0.00076 No subset_march_17_vs_21 0.64682 0.00076 No subset_march_18_vs_19 0.16548 0.00076 No subset_march_18_vs_20 0.56420 0.00076 No subset_march_18_vs_21 0.74817 0.00076 No subset_march_19_vs_20 0.13629 0.00076 No subset_march_19_vs_21 0.41031 0.00076 No subset_march_20_vs_21 0.56936 0.00076 No 11.1.3.2 Summary stats: Total wake duration by date Table 11.6: Summary stats: Wake duration by date of tournament period. date median IQR 2016-03-10 76 35 2016-03-11 71 36 2016-03-12 82 52 2016-03-13 92 34 2016-03-14 66 50 2016-03-15 108 62 2016-03-16 74 42 2016-03-17 62 51 2016-03-18 51 19 2016-03-19 76 37 2016-03-20 50 52 2016-03-21 59 36 ## Warning: Removed 2 rows containing missing values (geom_point). 11.2 Omnibus models: Based on in-flight efficiency group Table 11.7: Omnibus model results: Tournament sleep &amp; in-flight efficiency group. Test effect Statistic df p Sig. difference? Sleep duration Main effect: In-flight efficiency group 0.1538 1.0000 0.6949 No Main effect: Date 3.5297 4.5673 0.0046 Yes Interaction: Group x Date 0.8803 4.5673 0.4857 No Sleep efficiency Main effect: In-flight efficiency group 2.1564 1.0000 0.1420 No Main effect: Date 1.3545 3.7514 0.2491 No Interaction: Group x Date 1.5556 3.7514 0.1868 No Sleep latency Main effect: In-flight efficiency group 0.4563 1.0000 0.4994 No Main effect: Date 0.8400 4.7851 0.5167 No Interaction: Group x Date 0.2911 4.7851 0.9119 No Average duration of wake bouts Main effect: In-flight efficiency group 1.2656 1.0000 0.2606 No Main effect: Date 1.1196 3.7708 0.3442 No Interaction: Group x Date 1.6948 3.7708 0.1520 No Number of wake bouts Main effect: In-flight efficiency group 0.5435 1.0000 0.4610 No Main effect: Date 2.9144 4.9537 0.0126 Yes Interaction: Group x Date 0.6997 4.9537 0.6223 No Total wake duration Main effect: In-flight efficiency group 1.6841 1.0000 0.1944 No Main effect: Date 2.6995 3.9328 0.0297 Yes Interaction: Group x Date 1.2934 3.9328 0.2703 No 11.2.1 Pairwise tests for sleep duration 11.2.1.1 Main effect of date Note: There is no need for additional pairwise tests here, since this is the same main effect identified earlier - sleep duration changes over time during the tournament period. The relevant pairwise test results are shown in Table 11.2. 11.2.2 Pairwise tests for number of wake bouts 11.2.2.1 Main effect of date Note: There is no need for additional pairwise tests here, since this is the same main effect identified earlier. See Table 11.4. "],
["inflightsleepandjetlag.html", "Chapter 12 Impact of flight on jetlag 12.1 Omnibus models: Based on in-flight duration group 12.2 Omnibus models: Based on in-flight efficiency group", " Chapter 12 Impact of flight on jetlag 12.1 Omnibus models: Based on in-flight duration group Table 12.1: Omnibus model results: Jetlag &amp; in-flight duration group. Test effect Statistic df p Sig. difference? AM jetlag Main effect: In-flight duration group 0.3579 1.0000 0.5497 No Main effect: Date 4.6602 3.2735 0.0021 Yes Interaction: Group x Date 3.0758 3.2735 0.0227 Yes PM jetlag Main effect: In-flight duration group 0.0775 1.0000 0.7807 No Main effect: Date 4.8525 2.9489 0.0024 Yes Interaction: Group x Date 3.8401 2.9489 0.0096 Yes 12.1.1 Pairwise tests for AM jetlag 12.1.1.1 Main effect of date Perceived jetlag data was recorded from 2016-03-10 to 2016-03-16, inclusive. To test all pairs of dates requires 21 pairwise comparisons, so the Bonferroni-adjusted p value = 0.05 / 21 = 0.00238. Table 12.2: Pairwise comparisons: Main effect of date on AM jetlag. Tested pair p p_bonferroni Pairwise difference? subset_march_10_vs_15 0.00057 0.00238 Yes subset_march_11_vs_15 0.00000 0.00238 Yes subset_march_11_vs_16 0.00003 0.00238 Yes subset_march_12_vs_15 0.00182 0.00238 Yes subset_march_10_vs_11 0.74177 0.00238 No subset_march_10_vs_12 0.71070 0.00238 No subset_march_10_vs_13 0.17007 0.00238 No subset_march_10_vs_14 0.17007 0.00238 No subset_march_10_vs_16 0.01349 0.00238 No subset_march_11_vs_12 0.58509 0.00238 No subset_march_11_vs_13 0.06986 0.00238 No subset_march_11_vs_14 0.11344 0.00238 No subset_march_12_vs_13 0.36605 0.00238 No subset_march_12_vs_14 0.14179 0.00238 No subset_march_12_vs_16 0.01448 0.00238 No subset_march_13_vs_14 0.82974 0.00238 No subset_march_13_vs_15 0.00443 0.00238 No subset_march_13_vs_16 0.01431 0.00238 No subset_march_14_vs_15 0.03622 0.00238 No subset_march_14_vs_16 0.05709 0.00238 No subset_march_15_vs_16 0.17007 0.00238 No 12.1.1.2 Summary stats: AM jetlag by date Table 12.3: Summary stats: AM jetlag by date of tournament period. date median IQR 2016-03-10 4 1 2016-03-11 4 1 2016-03-12 4 2 2016-03-13 4 1 2016-03-14 4 2 2016-03-15 5 0 2016-03-16 5 1 12.1.1.3 Interaction effect of group x date From the omnibus model, the interaction effect of group x date indicates that there are differences between the in-flight duration groups in terms of their AM jetlag time profiles. More specifically, the groups differ in the way that AM jetlag changes between time points. Perceived jetlag data was recorded from 2016-03-10 to 2016-03-16, inclusive. There are two levels within the factor inflight_duration_group. To conduct pairwise comparisons of an interaction effect, we need to create subsets that allow us to compare the two in-flight duration groups on each pair of dates. In other words, we create one subset per pair of dates (i.e., 21 possible date-pairs, so 21 subsets). We run 1 comparison test for each subset (i.e., 21 comparison tests), where we are comparing the higher vs. lower in-flight duration groups in terms of their change from one date to another. For this part of the analysis, the Bonferroni-adjusted p value = 0.05 / 21 = 0.00238. Table 12.4: Pairwise comparisons: Interaction of duration group x date on AM jetlag. Tested date-pairs p p_bonferroni Pairwise difference? subset_march_11_vs_15 0.00058 0.00238 Yes subset_march_11_vs_16 0.00005 0.00238 Yes subset_march_10_vs_11 0.88357 0.00238 No subset_march_10_vs_12 0.92272 0.00238 No subset_march_10_vs_13 0.17007 0.00238 No subset_march_10_vs_14 0.03959 0.00238 No subset_march_10_vs_15 0.10963 0.00238 No subset_march_10_vs_16 0.02354 0.00238 No subset_march_11_vs_12 0.73103 0.00238 No subset_march_11_vs_13 0.06244 0.00238 No subset_march_11_vs_14 0.02131 0.00238 No subset_march_12_vs_13 0.21392 0.00238 No subset_march_12_vs_14 0.00719 0.00238 No subset_march_12_vs_15 0.06540 0.00238 No subset_march_12_vs_16 0.00762 0.00238 No subset_march_13_vs_14 0.16218 0.00238 No subset_march_13_vs_15 0.34278 0.00238 No subset_march_13_vs_16 0.01431 0.00238 No subset_march_14_vs_15 0.97168 0.00238 No subset_march_14_vs_16 0.29050 0.00238 No subset_march_15_vs_16 0.17007 0.00238 No 12.1.1.4 Summary stats: AM jetlag by group and date Table 12.5: Summary stats: AM jetlag by in-flight duration group and date-pairs. subset_id higher_duration_group_change lower_duration_group_change subset_march_10_vs_11 0 ± 0 0 ± 2 subset_march_10_vs_12 0 ± 1 0 ± 1 subset_march_10_vs_13 0 ± 2 -1 ± 1 subset_march_10_vs_14 1 ± 2 -1 ± 0 subset_march_10_vs_15 -1 ± 1 -2 ± 0 subset_march_10_vs_16 0 ± 2 -2 ± 0 subset_march_11_vs_12 0 ± 0 0 ± 2 subset_march_11_vs_13 0 ± 0 -1 ± 2 subset_march_11_vs_14 0 ± 1 -2 ± 2 subset_march_11_vs_15 0 ± 1 -2 ± 1 subset_march_11_vs_16 0 ± 0 -2 ± 1 subset_march_12_vs_13 0 ± 0 -1 ± 0 subset_march_12_vs_14 0 ± 1 -1 ± 0 subset_march_12_vs_15 0 ± 1 -2 ± 1 subset_march_12_vs_16 0 ± 0 -2 ± 1 subset_march_13_vs_14 0 ± 0 0 ± 0 subset_march_13_vs_15 0 ± 1 -1 ± 0 subset_march_13_vs_16 0 ± 0 -1 ± 0 subset_march_14_vs_15 0 ± 1 0 ± 1 subset_march_14_vs_16 0 ± 0 0 ± 1 subset_march_15_vs_16 0 ± 1 0 ± 0 12.1.2 Pairwise tests for PM jetlag 12.1.2.1 Main effect of date Perceived jetlag data was recorded from 2016-03-10 to 2016-03-16, inclusive. To test all pairs of dates requires 21 pairwise comparisons, so the Bonferroni-adjusted p value = 0.05 / 21 = 0.00238. Table 12.6: Pairwise comparisons: Main effect of date on PM jetlag. Tested pair p p_bonferroni Pairwise difference? subset_march_11_vs_14 0.00042 0.00238 Yes subset_march_11_vs_15 0.00000 0.00238 Yes subset_march_11_vs_16 0.00000 0.00238 Yes subset_march_10_vs_11 0.05778 0.00238 No subset_march_10_vs_12 0.33465 0.00238 No subset_march_10_vs_13 0.21542 0.00238 No subset_march_10_vs_14 0.09636 0.00238 No subset_march_10_vs_15 0.00389 0.00238 No subset_march_10_vs_16 0.00967 0.00238 No subset_march_11_vs_12 0.05489 0.00238 No subset_march_11_vs_13 0.02212 0.00238 No subset_march_12_vs_13 0.53383 0.00238 No subset_march_12_vs_14 0.29042 0.00238 No subset_march_12_vs_15 0.06047 0.00238 No subset_march_12_vs_16 0.03944 0.00238 No subset_march_13_vs_14 0.72419 0.00238 No subset_march_13_vs_15 0.21873 0.00238 No subset_march_13_vs_16 0.02270 0.00238 No subset_march_14_vs_15 0.14228 0.00238 No subset_march_14_vs_16 0.01431 0.00238 No subset_march_15_vs_16 0.55715 0.00238 No 12.1.2.2 Summary stats: PM jetlag by date Table 12.7: Summary stats: PM jetlag by date of tournament period. date median IQR 2016-03-10 4 1 2016-03-11 4 1 2016-03-12 4 1 2016-03-13 4 2 2016-03-14 4 1 2016-03-15 5 1 2016-03-16 5 1 12.1.2.3 Interaction effect of group x date From the omnibus model, the interaction effect of group x date indicates that there are differences between the in-flight duration groups in terms of their PM jetlag time profiles. More specifically, the groups differ in the way that PM jetlag changes between time points. Perceived jetlag data was recorded from 2016-03-10 to 2016-03-16, inclusive. There are two levels within the factor inflight_duration_group. To conduct pairwise comparisons of an interaction effect, we need to create subsets that allow us to compare the two in-flight duration groups on each pair of dates. In other words, we create one subset per pair of dates (i.e., 21 possible date-pairs, so 21 subsets). We run 1 comparison test for each subset (i.e., 21 comparison tests), where we are comparing the higher vs. lower in-flight duration groups in terms of their change from one date to another. For this part of the analysis, the Bonferroni-adjusted p value = 0.05 / 21 = 0.00238. Table 12.8: Pairwise comparisons: Interaction of duration group x date on PM jetlag. Tested date-pairs p p_bonferroni Pairwise difference? subset_march_10_vs_16 0.00138 0.00238 Yes subset_march_11_vs_15 0.00009 0.00238 Yes subset_march_11_vs_16 0.00015 0.00238 Yes subset_march_10_vs_11 0.52709 0.00238 No subset_march_10_vs_12 0.00704 0.00238 No subset_march_10_vs_13 0.05667 0.00238 No subset_march_10_vs_14 0.01890 0.00238 No subset_march_10_vs_15 0.00389 0.00238 No subset_march_11_vs_12 0.02537 0.00238 No subset_march_11_vs_13 0.07040 0.00238 No subset_march_11_vs_14 0.00543 0.00238 No subset_march_12_vs_13 1.00000 0.00238 No subset_march_12_vs_14 0.74081 0.00238 No subset_march_12_vs_15 0.54546 0.00238 No subset_march_12_vs_16 0.18078 0.00238 No subset_march_13_vs_14 0.72419 0.00238 No subset_march_13_vs_15 0.48514 0.00238 No subset_march_13_vs_16 0.02270 0.00238 No subset_march_14_vs_15 0.48702 0.00238 No subset_march_14_vs_16 0.01431 0.00238 No subset_march_15_vs_16 0.19824 0.00238 No 12.1.2.4 Summary stats: PM jetlag by group and date Table 12.9: Summary stats: PM jetlag by in-flight duration group and date-pairs. subset_id higher_duration_group_change lower_duration_group_change subset_march_10_vs_11 0 ± 1 0 ± 0 subset_march_10_vs_12 1 ± 1 -1 ± 0 subset_march_10_vs_13 0 ± 2 -1 ± 0 subset_march_10_vs_14 0 ± 2 -1 ± 0 subset_march_10_vs_15 0 ± 2 -2 ± 1 subset_march_10_vs_16 0 ± 2 -2 ± 0 subset_march_11_vs_12 0 ± 0 -1 ± 0 subset_march_11_vs_13 0 ± 1 -1 ± 0 subset_march_11_vs_14 0 ± 1 -1 ± 1 subset_march_11_vs_15 0 ± 1 -2 ± 0 subset_march_11_vs_16 0 ± 1 -2 ± 0 subset_march_12_vs_13 0 ± 0 0 ± 1 subset_march_12_vs_14 0 ± 0 0 ± 0 subset_march_12_vs_15 0 ± 0 0 ± 1 subset_march_12_vs_16 0 ± 0 -1 ± 0 subset_march_13_vs_14 0 ± 0 0 ± 0 subset_march_13_vs_15 0 ± 0 0 ± 1 subset_march_13_vs_16 0 ± 0 0 ± 1 subset_march_14_vs_15 0 ± 0 0 ± 1 subset_march_14_vs_16 0 ± 0 -1 ± 0 subset_march_15_vs_16 0 ± 0 0 ± 0 12.2 Omnibus models: Based on in-flight efficiency group Table 12.10: Omnibus model results: Jetlag &amp; in-flight efficiency group. Test effect Statistic df p Sig. difference? AM jetlag Main effect: In-flight efficiency group 3.1658 1.0000 0.0752 No Main effect: Date 2.9833 3.3299 0.0252 Yes Interaction: Group x Date 1.6116 3.3299 0.1789 No PM jetlag Main effect: In-flight efficiency group 5.6754 1.0000 0.0172 Yes Main effect: Date 3.4765 2.5637 0.0207 Yes Interaction: Group x Date 2.2534 2.5637 0.0901 No 12.2.1 Pairwise tests for AM jetlag 12.2.1.1 Main effect of date Note: No need for additional pairwise tests - this analysis will produce the same results as in Table 12.2. 12.2.2 Pairwise tests for PM jetlag 12.2.2.1 Main effect of in-flight efficiency group Note: No need for additional pairwise tests - there are only two levels within the grouping variable: higher vs. lower in-flight sleep efficiency. 12.2.2.2 Summary stats: PM jetlag by in-flight efficiency group Table 12.11: Summary stats: PM jetlag by in-flight efficiency group. In-flight efficiency group median IQR Higher in-flight efficiency 5 1 Lower in-flight efficiency 4 1 12.2.2.3 Main effect of date Note: No need for additional pairwise tests - this analysis will produce the same results as in Table 12.6. "],
["inflightsleepandwellbeing.html", "Chapter 13 Impact of flight on well-being 13.1 Omnibus models: Based on in-flight duration group 13.2 Omnibus models: Based on in-flight efficiency group", " Chapter 13 Impact of flight on well-being 13.1 Omnibus models: Based on in-flight duration group Table 13.1: Omnibus model results: Well-being &amp; in-flight duration group. Test effect Statistic df p Sig. difference? Fatigue Main effect: In-flight duration group 0.0871 1.0000 0.7679 No Main effect: Date 1.6428 4.2928 0.1557 No Interaction: Group x Date 1.7424 4.2928 0.1325 No Sleep quality Main effect: In-flight duration group 3.6892 1.0000 0.0548 No Main effect: Date 2.2046 4.2567 0.0616 No Interaction: Group x Date 0.7845 4.2567 0.5421 No Soreness Main effect: In-flight duration group 1.0475 1.0000 0.3061 No Main effect: Date 1.4108 2.8799 0.2385 No Interaction: Group x Date 0.8474 2.8799 0.4638 No Stress Main effect: In-flight duration group 0.4384 1.0000 0.5079 No Main effect: Date 0.7716 3.7623 0.5362 No Interaction: Group x Date 2.1615 3.7623 0.0748 No Overall score Main effect: In-flight duration group 0.3066 1.0000 0.5798 No Main effect: Date 0.7489 3.3441 0.5362 No Interaction: Group x Date 0.3959 3.3441 0.7774 No 13.2 Omnibus models: Based on in-flight efficiency group Table 13.2: Omnibus model results: Well-being &amp; in-flight efficiency group. Test effect Statistic df p Sig. difference? Fatigue Main effect: In-flight efficiency group 5.4327 1.0000 0.0198 Yes Main effect: Date 1.4481 3.7542 0.2181 No Interaction: Group x Date 1.0772 3.7542 0.3642 No Sleep quality Main effect: In-flight efficiency group 0.0753 1.0000 0.7837 No Main effect: Date 2.2432 4.2926 0.0571 No Interaction: Group x Date 1.2066 4.2926 0.3050 No Soreness Main effect: In-flight efficiency group 0.2197 1.0000 0.6393 No Main effect: Date 1.3790 2.8335 0.2483 No Interaction: Group x Date 0.3790 2.8335 0.7566 No Stress Main effect: In-flight efficiency group 0.1345 1.0000 0.7138 No Main effect: Date 0.5593 2.7926 0.6293 No Interaction: Group x Date 0.7211 2.7926 0.5298 No Overall score Main effect: In-flight efficiency group 0.4733 1.0000 0.4915 No Main effect: Date 0.7714 3.0769 0.5128 No Interaction: Group x Date 0.5816 3.0769 0.6313 No Note: No pairwise comparison is needed for the main effect of group, because this factor has only two levels: higher in-flight efficiency and lower in-flight efficiency. 13.2.1 Summary stats: Fatigue by in-flight efficiency group Table 13.3: Summary stats: Fatigue by in-flight efficiency group. In-flight efficiency group median IQR Higher in-flight efficiency 3 0 Lower in-flight efficiency 3 1 "],
["correlations.html", "Chapter 14 Correlations 14.1 Assumption tests 14.2 Load on Sleep 14.3 Well-being on Sleep 14.4 Jetlag on Sleep", " Chapter 14 Correlations NOTE: As of 2020-06-04, this page is a duplicate of what is presented in the results dashboard here. Treat the results on this page as provisional for now. There is further work to be done to check the underlying data, since some revisions have been made to the data cleaning procedure since these correlations were calculated. 14.1 Assumption tests 14.1.1 Interpretation of assumption test results Proceed with the non-parametric Spearman’s correlation, since many variables across the load, sleep, jetlag, and well-being measures do not approximate normal. Histogram + density plots for each measure are shown below. 14.1.2 Sleep 14.1.3 Internal load - All variables 14.1.4 Internal loads - Selected variables 14.1.5 Perceived jetlag 14.1.6 Perceived well-being 14.2 Load on Sleep ## Joining, by = &quot;sleep_variable&quot; 14.2.1 Correlation scatter plots: Internal loads on subsequent sleep 14.2.2 Correlation coefficients tables 14.2.2.1 Internal training load on subsequent sleep sleep_variable load_train_total_r load_train_total_p sleep_duration_sum -0.04 0.70 sleep_latency_mean 0.01 0.89 sleep_efficiency_mean -0.14 0.16 wake_duration_sum 0.09 0.37 wake_bouts_num_sum 0.13 0.21 wake_bouts_avg_duration_mean -0.01 0.89 14.2.2.2 Internal playing load on subsequent sleep sleep_variable load_play_total_r load_play_total_p sleep_duration_sum -0.15 0.48 sleep_latency_mean 0.05 0.80 sleep_efficiency_mean 0.14 0.50 wake_duration_sum -0.38 0.06 wake_bouts_num_sum -0.24 0.25 wake_bouts_avg_duration_mean -0.10 0.64 14.3 Well-being on Sleep ## Joining, by = &quot;sleep_variable&quot; 14.3.1 Correlation scatter plots: Well-being on subsequent sleep 14.3.2 Correlation coefficients tables 14.3.2.1 Fatigue on subsequent sleep sleep_variable Fatigue_r Fatigue_p sleep_duration_sum -0.03 0.73 sleep_latency_mean 0.14 0.08 sleep_efficiency_mean 0.07 0.41 wake_duration_sum -0.11 0.16 wake_bouts_num_sum -0.14 0.08 wake_bouts_avg_duration_mean 0.00 0.99 14.3.2.2 Sleep quality on subsequent sleep sleep_variable Sleep_r Sleep_p sleep_duration_sum -0.16 0.05 sleep_latency_mean 0.06 0.42 sleep_efficiency_mean -0.12 0.13 wake_duration_sum -0.02 0.80 wake_bouts_num_sum -0.07 0.37 wake_bouts_avg_duration_mean 0.11 0.15 14.3.2.3 Soreness on subsequent sleep sleep_variable Soreness_r Soreness_p sleep_duration_sum -0.03 0.72 sleep_latency_mean 0.08 0.32 sleep_efficiency_mean -0.11 0.15 wake_duration_sum 0.08 0.31 wake_bouts_num_sum 0.05 0.55 wake_bouts_avg_duration_mean 0.16 0.05 14.3.2.4 Stress on subsequent sleep sleep_variable Stress_r Stress_p sleep_duration_sum 0.06 0.46 sleep_latency_mean -0.02 0.80 sleep_efficiency_mean -0.04 0.65 wake_duration_sum 0.08 0.33 wake_bouts_num_sum 0.04 0.63 wake_bouts_avg_duration_mean 0.21 0.01 14.3.2.5 Overall well-being on subsequent sleep sleep_variable overall_wellbeing_score_r overall_wellbeing_score_p sleep_duration_sum 0.01 0.95 sleep_latency_mean 0.03 0.72 sleep_efficiency_mean -0.06 0.47 wake_duration_sum 0.08 0.33 wake_bouts_num_sum 0.05 0.52 wake_bouts_avg_duration_mean 0.17 0.03 14.4 Jetlag on Sleep ## Joining, by = &quot;sleep_variable&quot; 14.4.1 Correlation scatter plots: Jetlag on subsequent sleep 14.4.2 Correlation coefficients sleep_variable jetlag_am_r jetlag_am_p jetlag_pm_r jetlag_pm_p sleep_duration_sum -0.03 0.81 -0.02 0.87 sleep_latency_mean -0.03 0.76 -0.01 0.95 sleep_efficiency_mean -0.14 0.21 0.16 0.15 wake_duration_sum 0.20 0.08 -0.08 0.47 wake_bouts_num_sum 0.23 0.04 -0.01 0.93 wake_bouts_avg_duration_mean 0.07 0.51 -0.11 0.35 "]
]
